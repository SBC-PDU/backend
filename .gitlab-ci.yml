# Copyright 2022-2024 Roman Ondráček
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: $CI_REGISTRY_IMAGE:testing

stages:
  - build-docker-testing
  - test
  - coding-style
  - deploy

.base_template: &base_template
  tags:
    - linux
    - amd64

.coding-style_template: &coding-style_template
  stage: coding-style
  needs: [build-docker-testing]
  <<: *base_template

.test_template: &test_template
  stage: test
  needs: [build-docker-testing]
  <<: *base_template

.composer_template: &composer_template
  before_script:
    - cp app/config/local.example.neon app/config/local.neon
    - composer install --no-progress
  cache:
    paths:
      - temp/composer/cache
  variables:
    COMPOSER_CACHE_DIR: temp/composer/cache

build-docker-testing:
  stage: build-docker-testing
  image: docker:latest
  services:
    - docker:dind
  before_script: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -f docker/testing/Dockerfile -t $CI_REGISTRY_IMAGE:testing docker/testing/
    - docker push $CI_REGISTRY_IMAGE:testing
  only:
    refs:
      - master

before_script:
  - cp app/config/local.example.neon app/config/local.neon
  - composer install

test:
  before_script:
    - !reference [.composer_template, before_script]
    - update-alternatives --set php /usr/bin/php${PHP_VERSION}
  script:
    - vendor/bin/tester -p phpdbg${PHP_VERSION} -c ./tests/php.ini -s ./tests
  after_script:
    - 'for i in $(find ./tests -name \*.actual); do echo "--- $i"; cat $i; echo; echo; done'
  parallel:
    matrix:
      - PHP_VERSION:
          - '8.3'
  <<: *test_template
  <<: *composer_template

coverage:
  before_script:
    - update-alternatives --set php /usr/bin/php8.3
    - !reference [.composer_template, before_script]
    - vendor/bin/tester -c ./tests/php-coverage.ini --info
  script:
    - vendor/bin/tester -c ./tests/php-coverage.ini -o none -o junit:junit.xml --coverage ./coverage.html --coverage-src ./app ./tests
  allow_failure: true
  after_script:
    - 'for i in $(find ./tests -name \*.actual); do echo "--- $i"; cat $i; echo; echo; done'
  coverage: '/^\d+% covered/'
  artifacts:
    paths:
      - 'coverage.html'
    expire_in: 2 weeks
    reports:
      junit:
        - junit.xml
  <<: *test_template
  <<: *composer_template

code-checker:
  script:
    - composer create-project nette/code-checker temp/code-checker --no-interaction
    - php temp/code-checker/code-checker -l --no-progress --strict-types -i "coverage.*" -i "tests/temp/"
  <<: *coding-style_template
  <<: *composer_template

phpstan:
  script:
    - NETTE_TESTER_RUNNER=1 php vendor/bin/phpstan analyse -c phpstan.neon
  <<: *coding-style_template
  <<: *composer_template

codesniffer:
  script:
    - vendor/bin/codesniffer --runtime-set php_version 80300 app bin db tests
  <<: *coding-style_template
  <<: *composer_template

doctrine_mapping:
  script:
    - bin/manager orm:validate-schema --skip-sync
  <<: *coding-style_template
  <<: *composer_template

latte_lint:
  script:
    - vendor/bin/latte-lint app --strict
  <<: *coding-style_template
  <<: *composer_template
